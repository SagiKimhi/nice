NDContentPage.OnToolTipsLoaded({54:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype54\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">collections::&#8203; .</span>&#8203;sequential_collection</div></div></div><div class=\"TTSummary\">A collection which supports efficient element access using integer indices via the get() method and defines a size() method that returns the length of the sequence.</div></div>",83:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype83\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">collections::&#8203; .</span>&#8203;collection</div></div></div><div class=\"TTSummary\">A collection is a &lt;sized&gt; &lt;iterable&gt; &lt;container&gt; that stores objects of the same type in a linear arrangement.</div></div>",88:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype88\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">collections::&#8203; .</span>&#8203;unordered_collection</div></div></div><div class=\"TTSummary\">An unordered_collection is an interface for an unordered associative collection which implement unsorted (hashed) data structures that can be quickly searched.</div></div>",100:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype100\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">annotations::&#8203; .</span>&#8203;sized</div></div></div><div class=\"TTSummary\">An annotation for container types.</div></div>",106:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype106\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">annotations::&#8203; .</span>&#8203;container</div></div></div><div class=\"TTSummary\">An annotation for container types.</div></div>",109:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype109\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">annotations::&#8203; .</span>&#8203;sequential</div></div></div><div class=\"TTSummary\">An annotation for sequential container types.</div></div>",120:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype120\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual function int</span> size()</div></div><div class=\"TTSummary\">Get the size of a collection</div></div>",142:"<div class=\"NDToolTip TPackage LSystemVerilog\"><div id=\"NDPrototype142\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">package</span> annotations</div></div><div class=\"TTSummary\">A collection of interfaces that can be used to annotate classes that adhere to, require, or provide a result, that is of a particualr interface and provide a defined functionallity, regardless and independent of the type actual type and/or any base types that it extends.</div></div>",145:"<div class=\"NDToolTip TType LSystemVerilog\"><div id=\"NDPrototype145\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">typedef interface class</span> hashable</div></div><div class=\"TTSummary\">An annotation for associative container types.</div></div>",158:"<div class=\"NDToolTip TType LSystemVerilog\"><div id=\"NDPrototype158\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">typedef class</span> set</div></div></div>",160:"<div class=\"NDToolTip TType LSystemVerilog\"><div id=\"NDPrototype160\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">typedef class</span> deque</div></div><div class=\"TTSummary\">An impelmentation of a deque, similar to &lt;uvm_pkg::uvm_queue&gt; but with a wider and richer interface and some additional utilities such as iterators.</div></div>",204:"<div class=\"NDToolTip TInterface LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype204\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">patterns::&#8203; .</span>&#8203;iterator</div></div></div><div class=\"TTSummary\">An object representing a stream of data.</div></div>",396:"<div class=\"NDToolTip TPackage LSystemVerilog\"><div id=\"NDPrototype396\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">package</span> patterns</div></div><div class=\"TTSummary\">A collection of classes, virtual classes, and interface classes that allow programmers to easily implement common design patterns such as builder, composite, iterator, visitor, etc.</div></div>",398:"<div class=\"NDToolTip TType LSystemVerilog\"><div class=\"TTSummary\">Iterator design-pattern.</div></div>"});